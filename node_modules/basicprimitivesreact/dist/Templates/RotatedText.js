"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var RotatedText =
/*#__PURE__*/
function (_Component) {
  _inherits(RotatedText, _Component);

  function RotatedText() {
    _classCallCheck(this, RotatedText);

    return _possibleConstructorReturn(this, _getPrototypeOf(RotatedText).apply(this, arguments));
  }

  _createClass(RotatedText, [{
    key: "getTransform",
    value: function getTransform(orientation) {
      var result = "";

      switch (orientation) {
        case 'RotateLeft':
          result = "rotate(-90deg)";
          break;

        case 'RotateRight':
          result = "rotate(90deg)";
          break;

        default:
          break;
      }

      return result;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          width = _this$props.width,
          height = _this$props.height,
          orientation = _this$props.orientation,
          horizontalAlignment = _this$props.horizontalAlignment,
          verticalAlignment = _this$props.verticalAlignment;
      var transform = this.getTransform(orientation);
      var size = null;

      if (orientation === "Horizontal") {
        size = {
          width: width + "px",
          height: height + "px",
          maxWidth: width + "px",
          maxHeight: height + "px"
        };
      } else {
        size = {
          width: height + "px",
          height: width + "px",
          maxWidth: height + "px",
          maxHeight: width + "px",
          left: Math.round(width / 2.0 - height / 2.0) + "px",
          top: Math.round(height / 2.0 - width / 2.0) + "px"
        };
      }

      var style = _objectSpread({
        position: "absolute",
        padding: 0,
        margin: 0,
        lineHeight: 1,
        textAlign: horizontalAlignment,
        WebkitTransformOrigin: "center center",
        MozTransformOrigin: "center center",
        OTransformOrigin: "center center",
        msTransformOrigin: "center center",
        WebkitTransform: transform,
        MozTransform: transform,
        OTransform: transform,
        msTransform: transform,
        transform: transform
      }, size);

      return verticalAlignment === 'top' ? _react["default"].createElement("div", {
        style: style
      }, children) : _react["default"].createElement("table", {
        style: _objectSpread({}, style, {
          borderCollapse: "collapse"
        })
      }, _react["default"].createElement("tbody", null, _react["default"].createElement("tr", null, _react["default"].createElement("td", {
        style: {
          verticalAlign: verticalAlignment,
          padding: 0
        }
      }, children))));
    }
  }]);

  return RotatedText;
}(_react.Component);

_defineProperty(RotatedText, "propTypes", {
  width: _propTypes["default"].number.isRequired,
  height: _propTypes["default"].number.isRequired,
  orientation: _propTypes["default"].oneOf(['Horizontal', 'RotateLeft', 'RotateRight']),
  horizontalAlignment: _propTypes["default"].oneOf(['left', 'center', 'right']),
  verticalAlignment: _propTypes["default"].oneOf(['top', 'middle', 'bottom'])
});

_defineProperty(RotatedText, "defaultProps", {
  orientation: 'RotateRight',
  horizontalAlignment: 'center',
  verticalAlignment: 'middle'
});

var _default = RotatedText;
exports["default"] = _default;